package Multithreading;import org.checkerframework.checker.units.qual.C;import java.util.Random;import java.util.concurrent.CountDownLatch;/** * @author Chris Yang * created 2022-05-14 21:43 **/public class CountDownLatch_ {    public static void main(String[] args) {        CountDownLatch countDownLatch;    }}class CountDownLatchDemo{    static public class PreTask implements Runnable{        private String task;        private CountDownLatch countDownLatch;        public PreTask(String task, CountDownLatch countDownLatch){            this.task = task;            this.countDownLatch = countDownLatch;        }        @Override        public void run() {            try{                Random random = new Random();                Thread.sleep(random.nextInt(1000));                System.out.println(task + " - 任务完成");                countDownLatch.countDown();            }catch (InterruptedException e){                e.printStackTrace();            }        }    }    public static void main(String[] args) {        CountDownLatch countDownLatch = new CountDownLatch(3);        new Thread(() -> {            try{                System.out.println("任务加载中");                System.out.println(String.format("还有%d个前置任务",countDownLatch.getCount()));                countDownLatch.await();                System.out.println("数据加载完成，开始游戏");            }catch (InterruptedException e){                e.printStackTrace();            }        }).start();        new Thread(new PreTask("加载地图",countDownLatch)).start();        new Thread(new PreTask("加载任务",countDownLatch)).start();        new Thread(new PreTask("加载背景",countDownLatch)).start();    }}